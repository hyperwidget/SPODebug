// Generated by CoffeeScript 1.7.1
(function() {
  this.SMTT = {
    init: function() {
      var promptVal, _results;
      SMTT.currentSlide = 1;
      SMTT.isMaster = false;
      SMTT.socket = io.connect("http://www.calmlycoding.com:7777");
      SMTT.bindListeners();
      $(".slide").hide();
      $("#slide-1").show();
      if ($(location).attr('hash').substring(1) === 'master') {
        _results = [];
        while (!SMTT.isMaster) {
          promptVal = prompt('Ah Ah Ah, what\'s the magic word?');
          if (promptVal === 'iamthemaster') {
            _results.push(SMTT.isMaster = true);
          } else {
            _results.push(void 0);
          }
        }
        return _results;
      } else if ($(location).attr('hash').substring(1) === 'solo') {
        return SMTT.isSolo = true;
      }
    },
    bindListeners: function() {
      $(window).on("swipeleft", function(event) {
        return SMTT.nextSlide();
      });
      $(window).on("swiperight", function(event) {
        return SMTT.previousSlide();
      });
      $(document).bind('keydown', function(event) {
        switch (event.keyCode) {
          case 37:
            return SMTT.previousSlide();
          case 39:
            return SMTT.nextSlide();
        }
      });
      SMTT.socket.on("init", function(data) {
        console.log(data);
        SMTT.totalSlides = data.totalSlides;
        document.title = data.presentationName;
        if (!SMTT.isSolo) {
          if (SMTT.currentSlide !== data.currentSlide) {
            return SMTT.changeSlide(data.currentSlide);
          }
        }
      });
      SMTT.socket.on("userUpdate", function(data) {
        return $("#userCount").text(data.userCount);
      });
      return SMTT.socket.on("slideChanged", function(data) {
        if (data.slide !== SMTT.currentSlide) {
          return SMTT.changeSlide(data.slide);
        }
      });
    },
    previousSlide: function() {
      if (SMTT.currentSlide !== 1 && SMTT.isMaster || SMTT.isSolo) {
        SMTT.currentSlide--;
        return $('#slide-' + (SMTT.currentSlide + 1)).addClass('animated bounceOutLeft').one('webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend', function() {
          $(this).removeClass('animated bounceOutLeft').hide();
          if (SMTT.isMaster) {
            SMTT.socket.emit("slideChanged", {
              slide: SMTT.currentSlide
            });
          }
          return $('#slide-' + SMTT.currentSlide).show().addClass('animated bounceInRight').one('webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend', function() {
            return $(this).removeClass('animated bounceInRight');
          });
        });
      }
    },
    nextSlide: function() {
      if (SMTT.currentSlide + 1 <= SMTT.totalSlides && SMTT.isMaster || SMTT.isSolo) {
        SMTT.currentSlide++;
        return $('#slide-' + (SMTT.currentSlide - 1)).addClass('animated bounceOutLeft').one('webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend', function() {
          $(this).removeClass('animated bounceOutLeft').hide();
          if (SMTT.isMaster) {
            SMTT.socket.emit("slideChanged", {
              slide: SMTT.currentSlide
            });
          }
          return $('#slide-' + SMTT.currentSlide).show().addClass('animated bounceInRight').one('webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend', function() {
            return $(this).removeClass('animated bounceInRight');
          });
        });
      }
    },
    changeSlide: function(slide) {
      $('#slide-' + SMTT.currentSlide).addClass('animated bounceOutLeft').one('webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend', function() {
        $(this).removeClass('animated bounceOutLeft').hide();
        $('.slide').hide();
        SMTT.currentSlide = slide;
        return $('#slide-' + SMTT.currentSlide).show().addClass('animated bounceInRight').one('webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend', function() {
          return $(this).removeClass('animated bounceInRight');
        });
      });
      return console.log('changing slide to: ' + slide);
    }
  };

}).call(this);
